Before dec: Map, CHR, Vsp loading/saving
Início dec: Music (vgm, mod)
06/dec: Music (mp3)
09/dec: Verge Engine code
11/dec: JGame integration, Controls
12/dec: Sprite code, etc
16/dec: Startup code
22/dec: Zone, Layer, Map, etc
===== 15 HOURS ====
09/jan:(+1) Vsp data, Map load/render (in screen)
10/jan:(+1) Map scaling (slow)
11/jan:(+1) Entity, Chr load/render
12/jan:(+2) Entity rendering (ok), Player (render, movement, camera tracking ok) 
13/jan:(+3) Refactoring (reading pixels as byte), 
	    Scale screen with better performance, script (math/string/entity functions)
15/jan(.5): Blit with Black background, music playing
16/jan(.5): Script (mais funções, hook/string)
17/jan(+1): PS maps, VSP animation working (tileidx), CHR4 loading (partial)
18/jan(+3): CHR4 almost ok, CHR2 working (DefaultPalette)
19/jan(+3): Verge.cfg loading, created a isolated PS folder to run VergeEngine (as example) 
			Fixed bugs with hex editor (saving maps, writing unsigned short, ' ' char)
20/jan(+2): Fixed bugs with AllocateEntity, removed CleanUpChars, Map processing functions
21/jan(+2): Wraparound maps (horizontally, vertically, fixed Entity)
23/jan(+1): Function Calling (autoexec, mapinit, hooks, etc) 
24/jan(+2): ///----
25/jan(+4): Refactoring JGame / GUI / Screen 
26/jan(+2): ///----
26/jan(+1): Drawing functions (now they allow a Color parameter, instead of a int)
27/jan(+3): Font, GrabRegion, Blit, GetPixel, SetPixel
28/jan(+1): Music working (playmusic, stopmusic).
30/jan(+1): Ak (adapting code). Loading functions from current_map.
31/jan(+2): Entity public functions (setx,sety,incx,incy). Ak semi-working. Config file from URL.
==== 39 HOURS ====
01/feb(+2): Alex Kidd working. VImage transparent. CHR, Vsp, Map and Music working via URL. 
02/feb(+2): Window Resizing working. Mod Music looping. 
03/feb(+1): PS Item lib / Item class
05/feb(+2): TvIn, TvOut, ScaleSprite. SText function (split words, rows).
06/feb(+1): Fadein, Fadeout (alpha).
14/feb(+1): PS internationalization (ps talk)
15/feb(+2): Wav/Mid player, internationalization, (ps talk)
16/feb(+1): BufferStrategy. Pseudo-Back/Movescript working. Correct fadein/out.
17/feb(+2): Volatile Image. (Ps talk, items, menus, monsters, etc)
18/feb(+1): Create MenuStack (GUI) and ported Stext function. Removed VolatileImage again.
19/feb(+1): MenuStack (Prompt, prompt circle, waitopt)
20/feb(+3): Map.java working (reflection). WaitOpt return option selected. 
		    Playsound method (playing .wav (menu)), Camineet/Palma.java
21/feb(+1): Misc changes, MapUtil (rotate matrix, two in one, one in two) 
==== 59 HOURS ====
01/mar(+1): Volatile Image: studying and experimenting
02/mar(+1): Volatile Image again: this way working fast (GUICanvas only, scaling done there also)
05/mar(+1): Basic Sully conversion
06/mar(+2): Sully conversion (effects, music, weather, etc), Script adjustements, ColorFilter function
07/mar(+1): Colorfilter adjustements
08/mar(+1): Silhouette function (ok, tested with clouds)
09/mar(+3): SetLucent working for rect,circle,etc. Instead of dest.g.draw, using Blit, TBlit, SetPixel, etc
			Implement SetLucent() for Images (Blit, TBlit, etc)
			Investigate flickering. Ddraw argument. Image Processing Filters (Smooth, Scale, Reshade site)
10/mar(+1): Script clean-up. Functions in lowercase. Akidd minor changes. Copy Image to Clipboard.
11/mar(+2): Hookretrace working ok. Window insets OK, GUI performance, FPS, Volatile, LWJGL etc;
12/mar(+3): Sully Conversion (cont.) Verge Engine variables moved to Script. 
13/mar(+1): Sully Conversion (cont.) "functionexist" and execute function refactoring. Script clean-up.
14/mar(+2): Sully Conversion (cont.) menu classes and general conversion. Script clean-up and TODOs functions.
15/mar(+3): Sully Conversion (cont.) menu classes and general conversion. Script clean-up and TODOs functions.
16/mar(+3): Sully Conversion (compiling ok). Execute up to Intro - handling errors (PCX, null, file loading, etc)
17/mar(+2): Sully Conversion (intro ok, except menu). Script clean-up (transparent pixels, hookpath ok) 
19/mar(+3): PCX loading. Script function call (passing class as argument). Graphics optimization studying.
			Great GUI reformulation: no more flickering!!! (Java 2D optimization, changed thread model, etc)
20/mar(+2): Sully Conversion (Java files in data_load). Island conversion (but menus and effects with bugs) 
21/mar(+1): Sully Conversion (solved running intro into background via deprecated thread.stop)
23/mar(+2): Adjusted game loop in VergeEngine (die, done, etc). VFont (implemented print center/right/string)
24/mar(+2): Sully Conversion (pink fadein/out, solved banner and textbox, player wandering)
25/mar(+3): Sully Conversion (undersea map OK, break on the switches, party bug, overworld map, choice menu). 
			Fixed Silhouette. Fixed Triangle. Solved numobs+sliding bug. Fixed setx/sety (reset waypoint). 
26/mar(+2): Sully Conversion (cottage, chasm, inettalk, camscroll). Fixed circle with (x,y) in the center.    
27/mar(+1): Sully Conversion (bumville). Fixed showpage when changing maps (don't call anymore).
28/mar(+1): Sully Conversion (fixed movescript processing and player moving during scenes). Threads (exp...)
29/mar(+1): Sully Conversion (mountain, lab, general fixes).
30/mar(+1): Sully Conversion (effects, oldville). Merged path+method. Tested mountain map.
31/mar(+3): Sully Conversion (menus, shack, village, dungeon, castle, menu_shop). 
			Refactor callfunction ("a.b.function" instead of "a.b", "function").
==== 108 HOURS ====
02/apr(.5):	Sully Conversion (fixed menu function calling. removed GetInt() code)
04/apr(.5): Sully Conversion (paused when showing banner)
11/apr(+1): Sully Conversion (fixed MenuControl2Arrow, getInt() replacement)
12/apr(+1): Sully Conversion (globalluc change working, fixed data_load methods, misc)
15/apr(+1): Sully Conversion (data_load various fixes, all working now)
16/apr(+3): Sully Conversion (fixed menus: options, equip, stats). Solved ATK/DEF bug.
 			Lab map. Village. Added unpress(9) to fix movement bug after warping
17/apr(+3): Sully Conversion (menu save/load, Shack, Dungeon, solved Shop menu bug)
18/apr(+3): Sully Conversion (Castle, testing all quest 'till end, solving bugs)
			Solved saving bug with simple string. Nosound impl.
19/apr(+2): Sully Conversion (solved entitymove bug, entity wrapping bug, testing)
			Ak Conversion (moto/surf height depending on speed, title screen, AWT font)
20/apr(+2): Ak Conversion (map, level name, moto/surf breaking and reverse, clean up)		
21/apr(+4): Ak Conversion (fixed some bugs, added seahorse). Create CHR from file.
			Project divisions. Executable Jar Exporting (case-sensitive bugs!) 			
22/apr(+4)	Jar Conversion: Wav/Mp3 sound working with URL. VGM player working with URL. 
			Wav/Mp3 sound volume (JLayer project separation and adaptation)
			Sully Conversion to JAR: changed all case-sensitive images, and some chrs.
			Implemented case-sensitive robustness in load(url). Fixed EntStart() bug.
23/apr(+4)	Config file externally to the JAR. Playmusic reading from URL.
			MikMod JAR issue with RandomAccessFile solved with temporary file.
			Solved Sully loading files issue (but not saving). General clean-up, TODO, documenting...  			 
26/apr(+3)	Ak (adjusting a lot of maps, world map, bracelet implementation, moto shop implementation)	
27/apr(+4)	System functions: Toggle Sound On/Off (F5), Fullscreen (F6), Frame Delay (F7 - F8).
			Sully Conversion (Flashback scene in Oldville). Solved PCX bug (odd width). 
			Music playing/stop synchronized (to avoid playing multiple musics at the same time). 
			Ak (final adjusting, map coordinates, heli shop, disabled cheats. Fixed GME bug (pause function)
28/apr(+1)	Github first release.
=====145 HOURS ===========  -> FIRST RELEASE
01/mai(+2)	Showing FPS. PS Generation map. Follow entity flickering when crossing wrapable maps.
02/mai(+5)	CHR save. TGrabRegion. FlipImage. CHR processing (from PS generation, 60 chars).
03/mai(+2)	VSP save. VSP from Image code (remove duplicates)
05/mai(+3)	Moved VFont/VImage static to domain instance methods. Refactor Sully/PS/AK. 	
07/mai(+2)	PSG Camineet Map editing. Create layer from Image (PNG from Tiled).
08/mai(+1)	Lucent layers working (just changed to blit/tblit). Finished PSG Camineet map.
09/mai(.5)	Checked obs bug when saving map (apparently fixed). Menu positions adjustments.
10/mai(+3)	Change JMikmod implementation to read files from InputStream (URL), instead of 
			RandomAccessFile, because RAFs aren't suitable to JAR files (implemented SimulatedRAF)	
11/mai(+3)	Map conversion to OO. Reduced .vsp Generation file. Camineet script to Portuguese.
13/mai(+3)	PSG Palma (residential area, conversion of original tiles from palmax3 map). Fixed fadein/out.
14/mai(+1)	PS Scripts (english, portuguese, initial french and german). Tiled to V3 (using v3tiled)
15/mai(+1)	PS Scripts (alternative English PS)
16/mai(+2)	PS Scripts (alternative English PS). Palma PSG editing (V3Tiled).
17/mai(+1)	PS Scripts (alternative English PS). Palma PSG editing (V3Tiled).
18/mai(+2) 	PS Scripts (alternative English PS/finished).
21/mai(+2)	PS Scripts (Sheet with all languages, standard)
22/mai(+1)	Palma PSG Editing. Submission to Github (Ak, Sully and JVerge)
26/mai(+1)	Generic RenderMap implementation (enable Xeen partial-screen). Moved render() to VImage.
01/jun(+2)	Xeen Texture processing (Texture Maker Professional)
02/jun(+2)	Xeen Texture processing 
04/jun(+2)	Video optimization (tileset blit(), setPaint() instead of drawImage()).

09/jul(+1)	Video Optimization (imgcache - whole image blit() on layer 0, instead of tile per tile)
10/jul(+1)	Video Optimization (extended imgcache to all layers. Made it animation-compatible)
11/jul(+1)	Video Optimization (bug fixing), transparent layer-0 drawing (faster!) and code clean-up.
13/jul(+1)	Add Swing-menus functionality to window-mode screen
14/jul(+1)	Fixed some menu-bugs and screen displaying bug (strategy.show), showFPS flag
15/jul(+1)	Testing video optimization in other CPUs. Palma PSG editing (V3Tiled).


=====??? HOURS ===========  -> SECOND RELEASE


IMMEDIATE TODO (SECOND RELEASE)
(X) Add windows menus (like Fusion)
(X) Try to optimize video drawing
- Make it more OO (less static methods, no public properties, no static imports)
- Implement music volume
- Music/Map/CHR/Vsp caching
- Investigate why sometimes the transparency stops working (when swapping window/full screen)
- Investigate following entity spawning far from the player (related to wrappable maps)
- Investigate why wander entities change facing while walking (OK, it occurs also in V3/Sully)
- Check VGM loops (right now they aren't looping)
- VGMs doesn't play, just VGZ.

TODO
- Sully Load-Save in suplementar folder (see http://stackoverflow.com/questions/320542/how-to-get-the-path-of-a-running-jar-file)
- Sully: Try to save a file in the classpath './', in order to solve .sav problem (externally to the Jar)
- Sully: FIX CustomColorFilter when running Sarah Flashback in Oldville
- Sully: FIX Sparkles
- FIX: Entities' movement get screwed after talking to them
- Add logging capabilities (instead of system.out/err)
- Implement WrapBlit, TWrapBlit
- Verify ColorFilter, Implement Rotate, Flip, etc (See Graphics2d Rotate, Scale, etc)
- Implement AlphaBlit (http://verge-rpg.com/docs/the-verge-3-manual/graphics-functions/alphablit/)
- Implement TODO functions in Script
- Check if Script unused functions work properly
- Document code with Javadoc (get from V3 Manual) 

CONSIDER TODOs
- Socket implementation
- Movie playback implementation
- File functions implementation
- Window functions implementation
- Joysticks

LONG-TERM TODOs
- Create VC parser (parser or JIT Compiler?)
- Create LUA parser (parser or JIT Compiler?)
- See 3D API with fixed-z (~2D) to enable Video optimization
- See Generic way to implement graphics API (in order to extend it to Android, IPad, etc)



Test:
- Invalid config.cfg file. Non existent config.cfg file.
- Invalid image file. Non existent image file.
- Invalid sound file. Non existent sound file.
- Invalid music file. Non existent music file.
- Invalid font file. Non existent font file.
- Check invalid characters for font file (like á, when the font doesn't support it)
- Invalid map file. Non existent map file.
- Invalid vsp file. Non existent vsp file.
- Invalid chr file. Non existent chr file.

Very good tutorial about blurring, sharpening, etc (Java)
http://www.jhlabs.com/ip/blurring.html

Optimization: Graphics 2D setPaint() instead of drawImage()
https://forums.oracle.com/forums/thread.jspa?threadID=1266605

Optimization: Performance on tilesets (scrolling buffer):
http://www.java-gaming.org/index.php?topic=14385.0
http://www.gamedev.net/topic/277210-scrolling-buffer-in-a-tile-engine/

Optimization
http://stackoverflow.com/questions/10778878/java-drawimage-much-faster-in-eclipse-compared-to-when-compiled
http://stackoverflow.com/questions/658059/graphics-drawimage-in-java-is-extremely-slow-on-some-computers-yet-much-faster


FPS counter implementation
http://stackoverflow.com/questions/6890127/how-to-display-frames-per-second-in-an-java-applet-in-eclipse

PCX: See
http://www.java2s.com/Open-Source/Java/ERP-CRM-Financial/JFire-1.0.1/org/nightlabs/io/pcx/Catalogpcx.htm

RLE: See
http://kenai.com/projects/tilem/sources/tilem-jsr-296/content/src/tilem/imageformats/PCXReader.java?rev=1

Keycodes
http://docs.oracle.com/javase/7/docs/api/java/awt/event/KeyEvent.html#getKeyCode()

See page flipping in Java for better perfomance:
http://www.javafaq.nu/java-example-code-782.html
http://docs.oracle.com/javase/tutorial/extra/fullscreen/doublebuf.html
http://www.java-gaming.org/index.php/topic,23978.0

Toggle full screen / window screen
http://gpsnippets.blogspot.com.br/2007/08/toggle-fullscreen-mode.html

Image and Drawing functions
http://www.exampledepot.com/egs/java.awt.image/DrawOnImage.html
http://java.sun.com/products/jfc/tsc/articles/swing2d/index.html (Translucent)
http://docstore.mik.ua/orelly/java-ent/jfc/ch04_10.htm (ColorFilter)

LWJGL - A lot of platform specific code...
http://lwjgl.org/wiki/index.php?title=Main_Page#Getting_started

Transparent pixels
http://stackoverflow.com/questions/5672697/java-filling-a-bufferedimage-with-transparent-pixels

Helpful tips to avoid flicker:
http://mindprod.com/jgloss/flicker.html 

Reflexão em Java
http://battisti.wordpress.com/2008/06/14/reflexao-em-java/
 
Java Window application and Game loop without freezing UI 
http://www.codeguru.com/java/tij/tij0147.shtml
http://stackoverflow.com/questions/2861933/best-way-to-implement-game-loop-without-freezing-ui-thread

Volatile
http://stackoverflow.com/questions/4793054/create-volatileimage-always-return-null

Internationalization Links:
http://java.sun.com/developer/technicalArticles/Intl/ResourceBundles/
http://www.roseindia.net/java/example/java/swing/internationalization.shtml
(PDF) http://carfield.com.hk/document/java/tutorial/i18n.pdf

JavaZoom JLayer MP3 library (modified slightly to control the volume)
http://www.javazoom.net/javalayer/javalayer.html

ALWAYS REMEMBER: 
Jar files are case-sensitive (be sure to check when looking for resources inside it: sounds, maps, vsps, images, etc) 

Writing files in a JAR: Ideas for a Future development
http://en.allexperts.com/q/Java-1046/Writing-file-streams-directly.htm
http://answers.yahoo.com/question/index?qid=20091006132706AA07YJA
http://stackoverflow.com/questions/4056682/how-can-my-java-program-store-files-inside-of-its-jar-file



JVERGE: what is it?

JVerge is an attempt to bring all the Verge engine into Java. All the C-dependent code was removed and changed by a Java counterpart. 
That means all video/sound/music/keyboard/mouse code. The VC library code was adapted as needed (rect/circle/triangle/blit/etc), and some functions wasn't implemented, specially the File, Socket, Movie playback and Window functions.
JVerge has some new features: wrapable maps, as described in another topic, and the ability to play VGM/VGZ files (from Sega Master System, Genesis and other consoles).
JVerge does NOT parse VC or LUA scripts. It's more like a Java API, so you write code in Java and use JVerge functionality.  
Java is multiplataform, so I hope JVerge runs ok in any Windows, Mac, Linux and other systems with a Java Virtual Machine (JVM). In the future, maybe it could be possible to adapt it to Android and other similar platforms.

I have implemented three demos to show JVerge working:
- Phantasy Star remake: I've converted just a small portion of my original Verge PS remake, because I plan to come back later and actually finish this project. It's a common FF/PS-like game, with a top view and 2D chars walking in the map. It's using a 480x320 resolution, same as Ipad, I think.  
- Alex Kidd: It's here to show that Verge is not just about RPGs. Alex Kidd was a popular 2D platform game in Sega Master System. I've added my own levels and plan to extend it later. 
- Sully Chronicles: Well, converting Sully was very useful to fix a lot of errors, misconceptions and buggy code in my JVerge engine conversion. Now the engine is way more stable. But I've performed a direct conversion - that was faster than rewriting the Sully code to the Java paradigm.

I've packed them in .JAR executable jars (just run java -jar X.jar). It's also possible and recommended to developers to use an IDE like Eclipse or Netbeans, place the project there and see the source code running smoothly, understand it better, etc.
They are also separate projects/GIT repositories. For developers: Ak, Ps and Sully are dependent of JVerge. If you just want to experiment the demos, there are a 'redist' folder in each project with an executable JAR. 

https://github.com/rafael-esper/JVerge	
https://github.com/rafael-esper/Ak	
https://github.com/rafael-esper/Sully	
https://github.com/rafael-esper/PS	


JVERGE: The Future

In a next release, I plan to change the JVerge code into something more OO, like placing the methods inside the domain classes, e.g., printstring inside VFont, rect/circle/blit/etc inside VImage, playmusic inside VMusic, and so on.  
There are some unimplemented functions, possible bugs, and interesting things to do. 
If someone is interested in the project, I'd be happy to help extending JVerge to whatever we can think of.
If nobody cares about it, I'm going to concentrate my efforts in my Phantasy Star remake, and I'd be happy doing so.

NOTES ON SULLY CONVERSION
My initial goal was to show that the main tech demo would work properly with the Java engine, but now it is an example of a mindless bad programming practice: lots of static and public methods and properties, lots of static imports, and a general disoriented object programming.

- Some variables were converted to boolean. In Java you can't do: "while(count)", if count is an int. Need to change to "while(count !=0)"
- Add "break" clause after each "case" in the "switch" clause (unlike VC).
- A lot of methods and properties were changed to static. This is so anti-OO. :-(
- There is no script code being interpreted, it's just Java code. So the map() function can't just stop the remaining code to run. 
- In order to implement the Sully introduction (that can be escaped anytime with Esc), I've opted to create a Java thread and use the ugly and deprecated method stop. I could have done this in a more elegant way, but the code would be changed a lot more.  
- Java imports are different from C includes. So in order to call a function of an outer file, that would be normally included in C, I had to add the full path (like "a.b.function) to the callfunction method.
- Unlike VC, Java is case-sensitive. A lot of calls were changed because of this.
- As SetClip is not yet implemented, I've changed a little the textbox behavior to produce the same effects.
- The "|" text delimiter was changed to "&", because "|" has another meaning to regex String function. Needed to change this in all Menus and Shops. 
- I've performed some changes in the simpletype_rpg package, creating the structs (in Java, classes) in the corresponding classes. Not enough to be really OO, though.
- Reimplemented the data_load with Java File API. Not very hard to convert (just text files). But the token separator was changed to a tab ("\t"), and just ONE tab in the .dat files. 
- Data_load strcmp was different from expected, so changed !strcmp to strcmp and vice-versa
- The item "Cap" is just three letters long, so was interpreted as junk, because of MIN_LINE_LENGTH. Changed to LongCap.
- I've changed some MenuOff() and MenuOn() calls to EntStart() and EntFinish(), because somehow, the player wasn't stopped in the dramatic scenes, shops, etc.
- There were some bugs in the original code, like accessing a -1 index in an array in the AddPlayerI() function. Those bugs become evident in the Java code, as it's not allowed.
- There were some strange TextBox without the comma (like TextBox(PORTRAIT, "a" "b", "c"); How these were working?!
- Load/Saving works fine outside the executable Jars (like in Eclipse or just running java directly). But when packing the code in a .JAR, I wasn't able to deal with saving files externally to the JAR, but loading files works fine. I'm thinking about a solution to this problem.  
- I had a lot of problems with case-sensitive stuff (because JAR files are case-sensitive). 
- There were some unused variables.
- I see that there is another version of Sully somewhere, judging by screenshots. Is the code available?

